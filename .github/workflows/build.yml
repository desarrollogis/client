name: Build

on:
  workflow_run:
    workflows: ["Init"]
    types:
      - completed

jobs:
  linux-arm32:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2.1.0
      - name: Download VERSION
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: init.yml
          name: version
      - name: Add VERSION to environment
        run: |
          echo "VERSION=$(<version.txt)" >> $GITHUB_ENV
      - name: Download built jars
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: init.yml
          name: built-jars
          path: target/lib/
      - uses: uraimo/run-on-arch-action@v2.1.1
        name: Build & save Linux ARM32 ZIP
        with:
          arch: armv6
          distro: bullseye

          run: |
            sudo apt update
            sudo apt install axel unzip zip git

            VERSION=$(<version.txt)
            INSTALL_DIR=target/install
            mkdir -p $INSTALL_DIR
            mv target/lib/* $INSTALL_DIR


            axel -n 8 https://download2.gluonhq.com/openjfx/18/openjfx-18-ea+7_linux-arm32_bin-sdk.zip
            unzip openjfx-18-ea+7_linux-arm32_bin-sdk.zip -d javafx-sdk-arm32
            mv javafx-sdk-arm32/javafx-sdk-18/legal javafx-sdk-arm32/javafx-sdk-18/javafx-legal

            # Use Debug libgluon
            mv javafx-sdk-arm32/javafx-sdk-18/lib/libgluon_drm_debug-1.1.6.so javafx-sdk-arm32/javafx-sdk-18/lib/libgluon_drm.so
            rm -rf javafx-sdk-arm32/javafx-sdk-18/lib/libgluon_drm-1.1.6.so

            # Use Non Debug libgluon
            # mv javafx-sdk-arm32/javafx-sdk-18/lib/libgluon_drm-1.1.6.so javafx-sdk-arm32/javafx-sdk-18/lib/libgluon_drm.so
            # rm -rf javafx-sdk-arm32/javafx-sdk-18/lib/libgluon_drm_debug-1.1.6.so





            # Use latest JFX
            git clone https://github.com/rnayabed/jfx-embedded-builds

            #mv jfx-embedded-builds/* $INSTALL_DIR/


            mv jfx-embedded-builds/libglass.so javafx-sdk-arm32/javafx-sdk-18/lib/
            # mv jfx-embedded-builds/libglass_monocle_x11.so  javafx-sdk-arm32/javafx-sdk-18/lib/


            mv javafx-sdk-arm32/javafx-sdk-18/lib/* $INSTALL_DIR/

            cp assets/launchers/arm-jvm/run_console $INSTALL_DIR/run_console
            cp assets/launchers/arm-jvm/run_desktop $INSTALL_DIR/run_desktop
            cp assets/linux-icon.png $INSTALL_DIR/app-icon.png
            chmod +x $INSTALL_DIR/run_desktop
            chmod +x $INSTALL_DIR/run_console

            #Download jdk
            axel -n 8 https://cdn.azul.com/zulu-embedded/bin/zulu11.48.21-ca-jdk11.0.11-linux_aarch32hf.tar.gz
            tar -xvzf zulu11.48.21-ca-jdk11.0.11-linux_aarch32hf.tar.gz

            #Run jpackage
            zulu11.48.21-ca-jdk11.0.11-linux_aarch32hf/bin/jlink --no-header-files --no-man-pages --add-modules java.base,java.logging,java.net.http,java.scripting,jdk.jsobject,jdk.unsupported,jdk.unsupported.desktop,jdk.xml.dom,java.xml,java.management,jdk.localedata,java.sql,jdk.crypto.ec --output $INSTALL_DIR/jre

            cd $INSTALL_DIR
            zip -r stream-pi-client-linux-arm32-$VERSION-executable.zip *

      - name: Saving Linux ARM32 ZIP
        uses: actions/upload-artifact@v2
        with:
          name: linux-zip-arm32
          path: target/install/stream-pi-client-linux-arm32-${{ env.VERSION }}-executable.zip
